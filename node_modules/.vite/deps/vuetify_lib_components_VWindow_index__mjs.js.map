{
  "version": 3,
  "sources": ["../../vuetify/src/components/VWindow/VWindow.tsx", "../../vuetify/src/directives/touch/index.ts", "../../vuetify/src/composables/lazy.ts", "../../vuetify/src/components/VWindow/VWindowItem.tsx"],
  "sourcesContent": ["// Styles\nimport './VWindow.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Directives\nimport { Touch } from '@/directives/touch'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useGroup } from '@/composables/group'\nimport { useLocale } from '@/composables/locale'\nimport { useRtl } from '@/composables/rtl'\n\n// Utilities\nimport { computed, provide, ref, watch } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { ComputedRef, InjectionKey, PropType, Ref } from 'vue'\nimport type { GroupItemProvide, GroupProvide } from '@/composables/group'\nimport type { IconValue } from '@/composables/icons'\nimport type { MakeSlots } from '@/util'\nimport type { TouchHandlers } from '@/directives/touch'\n\ntype WindowProvide = {\n  transition: ComputedRef<undefined | string>\n  transitionCount: Ref<number>\n  transitionHeight: Ref<undefined | string>\n  isReversed: Ref<boolean>\n  rootRef: Ref<HTMLElement | undefined>\n}\n\ntype ControlProps = {\n  icon: IconValue\n  class: string\n  onClick: () => void\n  ariaLabel: string\n}\n\nexport const VWindowSymbol: InjectionKey<WindowProvide> = Symbol.for('vuetify:v-window')\nexport const VWindowGroupSymbol: InjectionKey<GroupItemProvide> = Symbol.for('vuetify:v-window-group')\n\nexport const VWindow = genericComponent<new () => {\n  $slots: MakeSlots<{\n    default: [{ group: GroupProvide }]\n    additional: [{ group: GroupProvide }]\n    prev: [{ props: ControlProps }]\n    next: [{ props: ControlProps }]\n  }>\n}>()({\n  name: 'VWindow',\n\n  directives: {\n    Touch,\n  },\n\n  props: {\n    continuous: Boolean,\n    nextIcon: {\n      type: [Boolean, String, Function, Object] as PropType<IconValue>,\n      default: '$next',\n    },\n    prevIcon: {\n      type: [Boolean, String, Function, Object] as PropType<IconValue>,\n      default: '$prev',\n    },\n    reverse: Boolean,\n    showArrows: {\n      type: [Boolean, String],\n      validator: (v: any) => typeof v === 'boolean' || v === 'hover',\n    },\n    touch: {\n      type: [Object, Boolean] as PropType<boolean | TouchHandlers>,\n      default: undefined,\n    },\n    direction: {\n      type: String,\n      default: 'horizontal',\n    },\n\n    modelValue: null,\n    disabled: Boolean,\n    selectedClass: {\n      type: String,\n      default: 'v-window-item--active',\n    },\n    // TODO: mandatory should probably not be exposed but do this for now\n    mandatory: {\n      default: 'force' as const,\n    },\n\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (v: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isRtl } = useRtl()\n    const { t } = useLocale()\n\n    const group = useGroup(props, VWindowGroupSymbol)\n\n    const rootRef = ref()\n    const isRtlReverse = computed(() => isRtl.value ? !props.reverse : props.reverse)\n    const isReversed = ref(false)\n    const transition = computed(() => {\n      const axis = props.direction === 'vertical' ? 'y' : 'x'\n      const reverse = isRtlReverse.value ? !isReversed.value : isReversed.value\n      const direction = reverse ? '-reverse' : ''\n\n      return `v-window-${axis}${direction}-transition`\n    })\n    const transitionCount = ref(0)\n    const transitionHeight = ref<undefined | string>(undefined)\n\n    const activeIndex = computed(() => {\n      return group.items.value.findIndex(item => group.selected.value.includes(item.id))\n    })\n\n    watch(activeIndex, (newVal, oldVal) => {\n      const itemsLength = group.items.value.length\n      const lastIndex = itemsLength - 1\n\n      if (itemsLength <= 2) {\n        isReversed.value = newVal < oldVal\n      } else if (newVal === lastIndex && oldVal === 0) {\n        isReversed.value = true\n      } else if (newVal === 0 && oldVal === lastIndex) {\n        isReversed.value = false\n      } else {\n        isReversed.value = newVal < oldVal\n      }\n    })\n\n    provide(VWindowSymbol, {\n      transition,\n      isReversed,\n      transitionCount,\n      transitionHeight,\n      rootRef,\n    })\n\n    const canMoveBack = computed(() => props.continuous || activeIndex.value !== 0)\n    const canMoveForward = computed(() => props.continuous || activeIndex.value !== group.items.value.length - 1)\n\n    function prev () {\n      canMoveBack.value && group.prev()\n    }\n\n    function next () {\n      canMoveForward.value && group.next()\n    }\n\n    const arrows = computed(() => {\n      const arrows = []\n\n      const prevProps = {\n        icon: isRtl.value ? props.nextIcon : props.prevIcon,\n        class: `v-window__${isRtlReverse.value ? 'right' : 'left'}`,\n        onClick: group.prev,\n        ariaLabel: t('$vuetify.carousel.prev'),\n      }\n\n      arrows.push(canMoveBack.value\n        ? slots.prev\n          ? slots.prev({ props: prevProps })\n          : <VBtn { ...prevProps } />\n        : <div />\n      )\n\n      const nextProps = {\n        icon: isRtl.value ? props.prevIcon : props.nextIcon,\n        class: `v-window__${isRtlReverse.value ? 'left' : 'right'}`,\n        onClick: group.next,\n        ariaLabel: t('$vuetify.carousel.next'),\n      }\n\n      arrows.push(canMoveForward.value\n        ? slots.next\n          ? slots.next({ props: nextProps })\n          : <VBtn { ...nextProps } />\n        : <div />\n      )\n\n      return arrows\n    })\n\n    const touchOptions = computed(() => {\n      if (props.touch === false) return props.touch\n\n      const options: TouchHandlers = {\n        left: () => {\n          isRtlReverse.value ? prev() : next()\n        },\n        right: () => {\n          isRtlReverse.value ? next() : prev()\n        },\n        start: ({ originalEvent }) => {\n          originalEvent.stopPropagation()\n        },\n      }\n\n      return {\n        ...options,\n        ...(props.touch === true ? {} : props.touch),\n      }\n    })\n\n    useRender(() => (\n      <props.tag\n        ref={ rootRef }\n        class={[\n          'v-window',\n          {\n            'v-window--show-arrows-on-hover': props.showArrows === 'hover',\n          },\n          themeClasses.value,\n        ]}\n        v-touch={ touchOptions.value }\n      >\n        <div\n          class=\"v-window__container\"\n          style={{\n            height: transitionHeight.value,\n          }}\n        >\n          { slots.default?.({ group }) }\n\n          { props.showArrows !== false && (\n            <div class=\"v-window__controls\">\n              { arrows.value }\n            </div>\n          )}\n        </div>\n\n        { slots.additional?.({ group }) }\n      </props.tag>\n    ))\n\n    return {\n      group,\n    }\n  },\n})\n\nexport type VWindow = InstanceType<typeof VWindow>\n", "// Types\nimport type {\n  DirectiveBinding,\n  ObjectDirective,\n} from 'vue'\n\n// Utilities\nimport { keys } from '@/util'\n\nexport interface TouchHandlers {\n  start?: (wrapperEvent: { originalEvent: TouchEvent } & TouchWrapper) => void\n  end?: (wrapperEvent: { originalEvent: TouchEvent } & TouchWrapper) => void\n  move?: (wrapperEvent: { originalEvent: TouchEvent } & TouchWrapper) => void\n  left?: (wrapper: TouchWrapper) => void\n  right?: (wrapper: TouchWrapper) => void\n  up?: (wrapper: TouchWrapper) => void\n  down?: (wrapper: TouchWrapper) => void\n}\n\nexport interface TouchWrapper extends TouchHandlers {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  touchendX: number\n  touchendY: number\n  offsetX: number\n  offsetY: number\n}\n\nexport interface TouchValue extends TouchHandlers {\n  parent?: boolean\n  options?: AddEventListenerOptions\n}\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\nexport interface TouchDirectiveBinding extends Omit<DirectiveBinding, 'value'> {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start?.({ originalEvent: event, ...wrapper })\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end?.({ originalEvent: event, ...wrapper })\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move?.({ originalEvent: event, ...wrapper })\n}\n\nfunction createHandlers (value: TouchHandlers = {}): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction mounted (el: HTMLElement, binding: TouchDirectiveBinding) {\n  const value = binding.value\n  const target = value?.parent ? el.parentElement : el\n  const options = value?.options ?? { passive: true }\n  const uid = binding.instance?.$.uid // TODO: use custom uid generator\n\n  if (!target || !uid) return\n\n  const handlers = createHandlers(binding.value)\n\n  target._touchHandlers = target._touchHandlers ?? Object.create(null)\n  target._touchHandlers![uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName], options)\n  })\n}\n\nfunction unmounted (el: HTMLElement, binding: TouchDirectiveBinding) {\n  const target = binding.value?.parent ? el.parentElement : el\n  const uid = binding.instance?.$.uid\n\n  if (!target?._touchHandlers || !uid) return\n\n  const handlers = target._touchHandlers[uid]\n\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n\n  delete target._touchHandlers[uid]\n}\n\nexport const Touch: ObjectDirective = {\n  mounted,\n  unmounted,\n}\n\nexport default Touch\n", "// Utilities\nimport { computed, ref, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport { propsFactory } from '@/util'\n\nexport const makeLazyProps = propsFactory({\n  eager: Boolean,\n}, 'lazy')\n\nexport function useLazy (props: { eager: boolean }, active: Ref<boolean>) {\n  const isBooted = ref(false)\n  const hasContent = computed(() => isBooted.value || props.eager || active.value)\n\n  watch(active, () => isBooted.value = true)\n\n  function onAfterLeave () {\n    if (!props.eager) isBooted.value = false\n  }\n\n  return { isBooted, hasContent, onAfterLeave }\n}\n", "// Directives\nimport Touch from '@/directives/touch'\n\n// Composables\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\nimport { MaybeTransition } from '@/composables/transition'\nimport { useSsrBoot } from '@/composables/ssrBoot'\n\n// Utilities\nimport { computed, inject, nextTick, ref } from 'vue'\nimport { convertToUnit, defineComponent, useRender } from '@/util'\nimport { VWindowGroupSymbol, VWindowSymbol } from './VWindow'\n\nexport const VWindowItem = defineComponent({\n  name: 'VWindowItem',\n\n  directives: {\n    Touch,\n  },\n\n  props: {\n    reverseTransition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    transition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n\n    ...makeGroupItemProps(),\n    ...makeLazyProps(),\n  },\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const window = inject(VWindowSymbol)\n    const groupItem = useGroupItem(props, VWindowGroupSymbol)\n    const { isBooted } = useSsrBoot()\n\n    if (!window || !groupItem) throw new Error('[Vuetify] VWindowItem must be used inside VWindow')\n\n    const isTransitioning = ref(false)\n    const hasTransition = computed(() => window.isReversed.value ? props.reverseTransition !== false : props.transition !== false)\n\n    function onAfterTransition () {\n      if (!isTransitioning.value || !window) {\n        return\n      }\n\n      // Finalize transition state.\n      isTransitioning.value = false\n      if (window.transitionCount.value > 0) {\n        window.transitionCount.value -= 1\n\n        // Remove container height if we are out of transition.\n        if (window.transitionCount.value === 0) {\n          window.transitionHeight.value = undefined\n        }\n      }\n    }\n\n    function onBeforeTransition () {\n      if (isTransitioning.value || !window) {\n        return\n      }\n\n      // Initialize transition state here.\n      isTransitioning.value = true\n\n      if (window.transitionCount.value === 0) {\n        // Set initial height for height transition.\n        window.transitionHeight.value = convertToUnit(window.rootRef.value?.clientHeight)\n      }\n\n      window.transitionCount.value += 1\n    }\n\n    function onTransitionCancelled () {\n      onAfterTransition() // This should have the same path as normal transition end.\n    }\n\n    function onEnterTransition (el: Element) {\n      if (!isTransitioning.value) {\n        return\n      }\n\n      nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!hasTransition.value || !isTransitioning.value || !window) {\n          return\n        }\n\n        // Set transition target height.\n        window.transitionHeight.value = convertToUnit(el.clientHeight)\n      })\n    }\n\n    const transition = computed(() => {\n      const name = window.isReversed.value\n        ? props.reverseTransition\n        : props.transition\n\n      return !hasTransition.value ? false : {\n        name: typeof name !== 'string' ? window.transition.value : name,\n        onBeforeEnter: onBeforeTransition,\n        onAfterEnter: onAfterTransition,\n        onEnterCancelled: onTransitionCancelled,\n        onBeforeLeave: onBeforeTransition,\n        onAfterLeave: onAfterTransition,\n        onLeaveCancelled: onTransitionCancelled,\n        onEnter: onEnterTransition,\n      }\n    })\n\n    const { hasContent } = useLazy(props, groupItem.isSelected)\n\n    useRender(() => (\n      <MaybeTransition transition={ isBooted.value && transition.value } >\n        <div\n          class={[\n            'v-window-item',\n            groupItem.selectedClass.value,\n          ]}\n          v-show={ groupItem.isSelected.value }\n        >\n          { hasContent.value && slots.default?.() }\n        </div>\n      </MaybeTransition>\n    ))\n\n    return {}\n  },\n})\n\nexport type VWindowItem = InstanceType<typeof VWindowItem>\n"],
  "mappings": "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",
  "names": ["handleGesture", "wrapper", "touchstartX", "touchendX", "touchstartY", "touchendY", "dirRatio", "minDistance", "offsetX", "offsetY", "Math", "abs", "left", "right", "up", "down", "touchstart", "event", "touch", "changedTouches", "clientX", "clientY", "start", "originalEvent", "touchend", "end", "touchmove", "touchmoveX", "touchmoveY", "move", "createHandlers", "value", "e", "mounted", "el", "binding", "target", "parent", "parentElement", "options", "passive", "uid", "instance", "$", "handlers", "_touchHandlers", "Object", "create", "keys", "forEach", "eventName", "addEventListener", "unmounted", "removeEventListener", "Touch", "VWindowSymbol", "Symbol", "for", "VWindowGroupSymbol", "VWindow", "genericComponent", "name", "directives", "Touch", "props", "continuous", "Boolean", "nextIcon", "type", "String", "Function", "Object", "default", "prevIcon", "reverse", "showArrows", "validator", "v", "touch", "undefined", "direction", "modelValue", "disabled", "selectedClass", "mandatory", "makeTagProps", "makeThemeProps", "emits", "setup", "slots", "themeClasses", "provideTheme", "isRtl", "useRtl", "t", "useLocale", "group", "useGroup", "rootRef", "ref", "isRtlReverse", "computed", "value", "isReversed", "transition", "axis", "transitionCount", "transitionHeight", "activeIndex", "items", "findIndex", "item", "selected", "includes", "id", "watch", "newVal", "oldVal", "itemsLength", "length", "lastIndex", "provide", "canMoveBack", "canMoveForward", "prev", "next", "arrows", "prevProps", "icon", "class", "onClick", "ariaLabel", "push", "nextProps", "touchOptions", "options", "left", "right", "start", "originalEvent", "stopPropagation", "useRender", "height", "additional", "makeLazyProps", "propsFactory", "eager", "Boolean", "useLazy", "props", "active", "isBooted", "ref", "hasContent", "computed", "value", "watch", "onAfterLeave", "VWindowItem", "defineComponent", "name", "directives", "Touch", "props", "reverseTransition", "type", "Boolean", "String", "default", "undefined", "transition", "makeGroupItemProps", "makeLazyProps", "emits", "val", "setup", "slots", "window", "inject", "VWindowSymbol", "groupItem", "useGroupItem", "VWindowGroupSymbol", "isBooted", "useSsrBoot", "Error", "isTransitioning", "ref", "hasTransition", "computed", "isReversed", "value", "onAfterTransition", "transitionCount", "transitionHeight", "onBeforeTransition", "convertToUnit", "rootRef", "clientHeight", "onTransitionCancelled", "onEnterTransition", "el", "nextTick", "onBeforeEnter", "onAfterEnter", "onEnterCancelled", "onBeforeLeave", "onAfterLeave", "onLeaveCancelled", "onEnter", "hasContent", "useLazy", "isSelected", "useRender", "selectedClass"]
}
